@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply antialiased text-gray-900 dark:text-white;
  }
}

.prose pre {
  @apply bg-gray-800 text-gray-100 p-4 rounded-lg overflow-x-auto;
}

.prose code {
  @apply bg-gray-100 dark:bg-gray-700 px-1 py-0.5 rounded text-gray-800 dark:text-gray-200;
}

.prose pre code {
  @apply bg-transparent text-inherit p-0;
}

.custom-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: theme('colors.gray.400') theme('colors.gray.100');
}

.custom-scrollbar::-webkit-scrollbar {
  width: 8px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  @apply bg-gray-100 dark:bg-gray-800;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  @apply bg-gray-400 dark:bg-gray-600 rounded-full;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  @apply bg-gray-500 dark:bg-gray-500;
}

/* Terminal styles */
.terminal-container {
  @apply bg-[#1e1e1e] rounded-lg overflow-hidden;
}

.xterm {
  padding: 8px;
  height: 100%;
}

.xterm-viewport {
  overflow-y: auto !important;
  background-color: #1e1e1e !important;
}

.xterm-screen {
  background-color: #1e1e1e !important;
}

/* Split.js styles */
.gutter {
  background-color: theme('colors.gray.200');
  background-repeat: no-repeat;
  background-position: 50%;
}

.gutter:hover {
  background-color: theme('colors.gray.300');
}

.gutter.gutter-horizontal {
  cursor: col-resize;
}

.gutter.gutter-vertical {
  cursor: row-resize;
}

/* Monaco Editor customizations */
.monaco-editor .margin {
  @apply dark:bg-gray-900;
}

.monaco-editor .minimap {
  @apply dark:bg-gray-900;
}

/* Animations */
@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

.animate-fade-in {
  animation: fade-in 0.3s ease-in-out forwards;
}